#!/usr/bin/env bash

cat << EOM
——————————————————————————————————————————————————————————————————————————

      _______ _  _  _ _______  ______ _______        _______ _______
      |______ |  |  | |_____| |_____/ |  |  | |      |______    |
      ______| |__|__| |     | |    \  |  |  | |_____ |______    |


       Description:  A small tool to manage swarm deployments,
                     load balancing, SSL, metrics and more.
       Version:      *TODO*
       Author:       Tjerk Woudsma <tjerk@passionatepeople.io>
       Website:      https://swarmlet.dev

——————————————————————————————————————————————————————————————————————————
       Thank you for installing Swarmlet!

EOM

FPREFIX="=====>"
PREFIX="----->"
INDENT="      "

REPOSITORY="https://github.com/swarmlet/swarmlet.git"
DEPENDENCIES=(acl curl git apt-transport-https apache2-utils moreutils)
SWARMLET_INSTALL_ROOT="/opt/swarmlet"

if [ "${BASH_VERSINFO:-0}" -lt 4 ]; then
  echo "$PREFIX [ERROR] Unmet requirements: Bash 4"
  echo "$INDENT Your Bash version is $BASH_VERSION"
  echo "$PREFIX Exiting with error code 1" 1>&2
  exit 1
fi

declare -A DEFAULT_OPTS=(
  [ROOT_DOMAIN]=$HOSTNAME       # (default $HOSTNAME) The domain to use for deployment of included services
  [INSTALLATION_MODE]=full      # (default full, options: full|minimal|bare) .. TODO
  [INSTALL_BRANCH]=master       # (default master) The default branch to install
  [CREATE_SWAP]=false           # (default false) Allocate 1GB of swap space
  [INSTALL_ZSH]=false           # (default false) Install 'Oh My Zsh'
  [NOOP]=                       # no-op for testing purposes
  # > TODO/FIX:
  # [INTERACTIVE]=false         # (default false) Use CLI wizard to setup Swarmlet
  # [DEBUG]=                    # (default undefined) Run installation in debug mode
)

# Set default environment variables
for KEY in "${!DEFAULT_OPTS[@]}"; do
  [ ! -z "${DEFAULT_OPTS[$KEY]}" ] && export "$KEY=${DEFAULT_OPTS[$KEY]}";
done

# Set environment variables from arguments if given
shopt -s extglob
while [[ "$#" > 0 ]]; do case "${1%=*}" in
  @($(echo ${!DEFAULT_OPTS[@]} | sed 's/ /|/g'))) export "$1"; shift ;;
  *) echo "Unknown argument: $1"; shift ;;
esac; done

set -eo pipefail; [[ $DEBUG ]] && set -x

# TODO: unfinished business
# Set environment variables interactively using the CLI wizard
if [[ "$INTERACTIVE_INSTALL" == "true" ]]; then
  # Set whiptail color scheme and dialog constants
  export NEWT_COLORS="window=blue"
  DIALOG_WIDTH=20
  DIALOG_HEIGHT=60

  # Welcome message
  SECTION_TITLE="Swarmlet installation wizard"
  MESSAGE="\nWelcome to the Swarmlet interactive installation.\n\n\
Swarmlet version: $SWARMLET_VERSION\n\
Bash version: $(bash --version | head -n 1)\n\
System: $(uname -v | awk '{print $1}') $(uname) $(uname -r) $(uname -m)"
  whiptail \
    --title "$SECTION_TITLE" \
    --msgbox "$MESSAGE" \
    "$DIALOG_WIDTH" "$DIALOG_HEIGHT"

  # Set the root domain name
  SECTION_TITLE="Domain name configuration"
  MESSAGE="\nEnter the domain name you want to use with Swarmlet.\n\n\
Dashboards modules such as Traefik and Matomo will be hosted on subdomains of this domain.\n\
Access the Traefik dashboard at https://traefik.yourdomain.com for example."
  ROOT_DOMAIN=$(whiptail \
    --title "$SECTION_TITLE" \
    --inputbox "$MESSAGE" \
    "$DIALOG_WIDTH" "$DIALOG_HEIGHT" \
    "$ROOT_DOMAIN" \
    3>&1 1>&2 2>&3)
  EXIT_STATUS=$?; [[ "$EXIT_STATUS" == "1" ]] && exit 1

  # Set the installation mode
  SECTION_TITLE="Installation mode"
  MESSAGE="\nChoose the installation mode:"
  INSTALLATION_MODES=(
    full "Full installation"
    minimal "Minimal installation"
    custom "Custom installation"
  )
  INSTALLATION_MODE=$(whiptail \
    --title "$SECTION_TITLE" \
    --menu "$MESSAGE" \
    "$DIALOG_WIDTH" "$DIALOG_HEIGHT" "$((${#INSTALLATION_MODES[@]} / 2))" \
    "${INSTALLATION_MODES[@]}" \
    3>&1 1>&2 2>&3)
  EXIT_STATUS=$?; [[ "$EXIT_STATUS" == "1" ]] && exit 1

  if [[ "$INSTALLATION_MODE" != "custom" ]]; then continue; fi
  
  SECTION_TITLE="Install modules"
  MESSAGE="\nChoose which included modules to install.\nAll modules are self-hosted and open-source."
  INSTALL_MODULES_OPTIONS=(
    matomo "Install Matomo - Self-hosted analytics" ON
    swarmpit "Install Swarmpit - Self-hosted swarm management and metrics" ON
    portainer "Install Portainer - An alternative to Swarmpit" OFF
    swarmprom "Install Swarmprom - Swarm metrics and analytics" OFF
  )
  INSTALL_MODULES=$(whiptail \
    --title "$SECTION_TITLE" \
    --checklist "$MESSAGE" \
    "$DIALOG_WIDTH" "$DIALOG_HEIGHT" "$((${#INSTALL_MODULES_OPTIONS[@]} / 3))" \
    "${INSTALL_MODULES_OPTIONS[@]}" \
    3>&1 1>&2 2>&3)
  EXIT_STATUS=$?; [[ "$EXIT_STATUS" == "1" ]] && exit 1
fi

install() {
  echo "$PREFIX Installing Swarmlet"
  echo "$PREFIX Installing dependencies"
  apt-get update -y -qq >/dev/null
  apt-get install -y -qq "${DEPENDENCIES[@]}"

  echo "$PREFIX Installing Docker and Docker Compose"
  wget -nv -O - https://get.docker.com/ | sh >/dev/null
  curl -fsSL "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  chmod +x /usr/local/bin/docker-compose

  echo "$PREFIX Cloning $REPOSITORY"
  git clone -q $REPOSITORY $SWARMLET_INSTALL_ROOT

  if [[ "$INSTALL_BRANCH" != "master" ]]; then
    echo "$PREFIX Checking out $INSTALL_BRANCH"
    pushd $SWARMLET_INSTALL_ROOT >/dev/null
    git checkout "$INSTALL_BRANCH"
    popd >/dev/null
  fi

  if [[ "$INSTALL_ZSH" == "true" ]]; then
    echo "$PREFIX Installing 'Oh My Zsh'"
    apt-get install -y -qq zsh >/dev/null
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended >/dev/null
    chsh -s $(which zsh)
  fi

  echo "$PREFIX Linking executable"
  ln -s $SWARMLET_INSTALL_ROOT/swarmlet /usr/local/sbin/

  echo "$PREFIX Initializing Swarmlet"
  swarmlet init "$@"

  echo "$FPREFIX Server initialized as manager node"
  swarmlet node ls

  echo "$FPREFIX Swarmlet services stacks deployed"
  swarmlet stack ls

  echo "$FPREFIX Installation complete"
  echo "$PREFIX Check the docs on how to configure a domain name for Swarmlet services"
  echo "$INDENT https://swarmlet.dev/docs/getting-started/introduction"
  echo "$PREFIX Please wait a minute or two for Traefik to initialize..."
  echo "$INDENT Follow the logs using:"
  echo "$INDENT $ docker service logs loadbalancer_traefik -f"
}

install
