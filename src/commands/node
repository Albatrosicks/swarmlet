#!/usr/bin/env bash

set -eo pipefail; [[ $DEBUG ]] && set -x

node() {
  declare cmd="node"
  [[ "$1" == "$cmd" ]] && shift 1

  node-"$@"
}

node-ls() {
  declare cmd="ls"
  [[ "$1" == "$cmd" ]] && shift 1

  docker node ls --format "$PREFIX Hostname: {{.Hostname}}\n\
$PREFIX Manager status: {{.ManagerStatus}}\n\
$PREFIX Availability: {{.Availability}}\n\
$PREFIX Status: {{.Status}}\n\
$PREFIX Engine version: {{.EngineVersion}}"
}

node-join() {
  declare cmd="join"
  [[ "$1" == "$cmd" ]] && shift 1

  ROLE=$1
  NODE_IP=$2
  JOIN_TOKEN=$(docker swarm join-token "$ROLE" | grep -w "docker swarm join*" | sed 's/    //')
  JOIN_HOST=${ROOT_DOMAIN:-"$(hostname -I):$(get-random-open-port)"}
  JOIN_URL="curl -fsSL $JOIN_HOST | bash"

  # allow exposing the random port via traefik temporarily
  # exchange certificates
  # ssh into remote, install requirements and set up
  # what to do with the git user and the repos in /var/repo and /home/git

  echo "$FPREFIX Joining a $ROLE node to swarm"
  echo "$PREFIX To add a $ROLE to this swarm, run the following command on the target node"
  echo -e "\n$INDENT $JOIN_COMMAND"}"

}

node-remove() {
  declare cmd="remove"
  [[ "$1" == "$cmd" ]] && shift 1

  NODE_IP=$1

  
}

"$@"
