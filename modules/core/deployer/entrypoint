#!/usr/bin/env bash

set -eo pipefail
[[ $DEBUG ]] && set -x
set -o allexport
source "/swarmlet-config"

main() {
  tail -f /dev/null
}

deploy() {
  declare cmd="deploy"
  [[ "$1" == "$cmd" ]] && shift 1

  echo "$PREFIX Starting deployment"
  echo "$INDENT Command: $@"

  REPO_PATH="$1"
  REPO_NAME=$(basename $REPO_PATH)
  ENV_FILE="$REPO_PATH/.env"
  ENTRYPOINT_FILE="$REPO_PATH/entrypoint"
  COMPOSE_FILE="$REPO_PATH/docker-compose.yml"

  python3 --version
  python3 -c 'import yaml, sys; yaml.safe_load(sys.stdin)' <"$COMPOSE_FILE"

  if [[ -f $ENV_FILE ]]; then
    set -o allexport
    source $ENV_FILE
    set +o allexport
  fi

  if [[ -f $ENTRYPOINT_FILE && $REPO_NAME != "deployer" ]]; then
    source $ENTRYPOINT_FILE
  fi

  if [[ -f $COMPOSE_FILE ]]; then
    COMPOSE_CONFIG=$(docker-compose config)

    if [[ ! -z $(echo "$COMPOSE_CONFIG" | grep -o "build:*") ]]; then
      echo "$PREFIX Logging into local registry"
      echo $SWARMLET_REGISTRY_PASSWORD | docker login --password-stdin \
        -u $SWARMLET_REGISTRY_USERNAME \
        $SWARMLET_REGISTRY

      echo "$PREFIX Building $REPO_NAME"
      cd $REPO_PATH
      docker-compose build --parallel

      echo "$PREFIX Pushing $REPO_NAME"
      docker-compose push
    fi

    echo "$PREFIX Deploying $REPO_NAME"
    docker stack deploy --compose-file $COMPOSE_FILE $REPO_NAME

    HOSTS=$(echo "$COMPOSE_CONFIG" | grep -o "Host:.*")
    DOMAINS="${HOSTS//Host:/}"
    PROTOCOL=https # TODO: detect exposed protocols

    echo "$FPREFIX Stack deployed:"
    for DOMAIN in ${DOMAINS[@]}; do echo "[$REPO_NAME] â€” $PROTOCOL://$DOMAIN"; done
    echo
  else
    echo "$PREFIX No docker-compose.yml found, exiting"
    exit 1
  fi
}

"$@"
