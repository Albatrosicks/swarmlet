#!/usr/bin/env bash

set -eo pipefail; [[ $DEBUG ]] && set -x

# TODO: improve configuration workflow
set -o allexport
source "/opt/swarmlet/src/config"

main() {
  echo "$PREFIX Starting deployment"
  echo "$INDENT Command: $@"
  "$@"
}

deploy() {
  declare cmd="deploy"
  [[ "$1" == "$cmd" ]] && shift 1

  REPO_PATH="$1"
  REPO_NAME=$(basename $REPO_PATH)
  ENV_FILE="$REPO_PATH/.env"
  ENTRYPOINT_FILE="$REPO_PATH/entrypoint"
  COMPOSE_FILE="$REPO_PATH/docker-compose.yml"

  cd $REPO_PATH

  if [ -f $ENV_FILE ]; then
    set -o allexport
    source $ENV_FILE
    set +o allexport
  fi

  if [[ -f $ENTRYPOINT_FILE && $REPO_NAME != "deployer" ]]; then
    source $ENTRYPOINT_FILE
  fi

  if [ -f $COMPOSE_FILE ]; then
    echo "$PREFIX Logging into registry"
    docker login swarmlet-registry \
      -u $SWARMLET_REGISTRY_USER \
      -p $SWARMLET_REGISTRY_PASSWORD

    echo "$PREFIX Building $REPO_NAME"
    docker-compose build --parallel

    echo "$PREFIX Pushing $REPO_NAME"
    docker-compose push

    echo "$PREFIX Deploying $REPO_NAME"
    docker stack deploy --compose-file $COMPOSE_FILE $REPO_NAME

    HOSTS=$(docker-compose config | grep -o "Host:.*")
    DOMAINS="${HOSTS//Host:/}"
    PROTOCOL=https # todo

    echo "$FPREFIX Stack deployed:"
    for DOMAIN in ${DOMAINS[@]}; do echo "[$REPO_NAME] â€” $PROTOCOL://$DOMAIN"; done
    echo
  else
    echo "$PREFIX No docker-compose.yml found, exiting"
    exit 1
  fi
}

main "$@"
