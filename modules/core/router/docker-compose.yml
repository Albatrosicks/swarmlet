version: "3.7"

services:
  traefik:
    image: traefik:v2.2
    restart: always
    secrets:
      - security.htpasswd
    volumes:
      - /mnt/gfs/traefik:/letsencrypt
      - ./traefik-dynamic.yml:/traefik-dynamic.yml
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - traefik-public
      - swarmlet-network
    command:
      # https://docs.traefik.io/reference/static-configuration/cli/
      # check metrics via influxdb or prometheus
      ## Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
      # - --log.level=DEBUG # <== Setting the level of the logs from traefik
      - --log.level=INFO # <== Setting the level of the logs from traefik
      ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
      # - --api=true
      - --api.insecure=true # TODO: remove in production
      - --api.dashboard=true
      - --api.debug=true # <== Enabling additional endpoints for debugging and profiling
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - --providers.file.filename=/traefik-dynamic.yml
      - --providers.docker=true
      - --providers.docker.swarmmode=true
      - --providers.docker.network=traefik-public
      - --providers.docker.exposedbydefault=false
      ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
      - --entrypoints.ssh.address=:22
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      ## TLS Settings
      - --entrypoints.https.http.tls=true
      - --entrypoints.https.http.tls.certresolver=letsencrypt
      ## Certificate Settings (Let's Encrypt) -  https://docs.traefik.io/https/acme/#configuration-examples ##
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      # - --certificatesresolvers.letsencrypt.acme.caserver="https://acme-staging-v02.api.letsencrypt.org/directory"
      # - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=digitalocean
      # - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      # - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http
    deploy:
      replicas: ${TRAEFIK_REPLICAS:-1}
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      labels:
        - traefik.enable=true
        - traefik.http.services.traefik-api.loadbalancer.server.port=8080
        - traefik.http.routers.traefik-api.rule=Host(`router.${DOMAIN}`)
        - traefik.http.routers.traefik-api.entrypoints=http,https,ssh
        - traefik.http.routers.traefik-api.middlewares=redirect@file,auth@file
        - traefik.http.routers.traefik-api.service=api@internal
        # - traefik.http.routers.traefik-api.tls.certresolver=letsencrypt
      restart_policy:
        condition: always
        delay: 2s
        max_attempts: 5
        window: 120s

networks:
  traefik-public:
    external: true
  swarmlet-network:
    external: true

secrets:
  security.htpasswd:
    external: true
